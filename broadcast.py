from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import asyncio
import logging
from telegram.error import TelegramError, Forbidden, BadRequest
from database import load_users, update_blocked_status

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logger = logging.getLogger(__name__)

async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /broadcast: —Ä–æ–∑—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ç–µ–∫—Å—Ç–æ–º, –∫–∞—Ä—Ç–∏–Ω–∫–æ—é, –∫–Ω–æ–ø–∫–æ—é –∞–±–æ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º."""
    user_id = update.message.from_user.id
    # –í–∞—à Telegram ID –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–æ–º–∞–Ω–¥–∏ /broadcast
    admin_id = 293102975
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user_id != admin_id:
        await update.message.reply_text("–¶—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
        return

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
    if not context.args:
        await update.message.reply_text(
            "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:\n"
            "1. –ü—Ä–æ—Å—Ç–∏–π —Ç–µ–∫—Å—Ç: /broadcast <—Ç–µ–∫—Å—Ç> [all]\n"
            "2. –ó –∫–∞—Ä—Ç–∏–Ω–∫–æ—é: /broadcast <—Ç–µ–∫—Å—Ç> <URL_–∫–∞—Ä—Ç–∏–Ω–∫–∏> <—Ç–µ–∫—Å—Ç_–∫–Ω–æ–ø–∫–∏> <URL_–ø–æ—Å–∏–ª–∞–Ω–Ω—è> [all]\n\n"
            "–ü—Ä–∏–∫–ª–∞–¥–∏:\n"
            "‚Ä¢ /broadcast –ü—Ä–∏–≤—ñ—Ç, —Ü–µ —Ç–µ—Å—Ç!\n"
            "‚Ä¢ /broadcast –ü—Ä–∏–≤—ñ—Ç, —Ü–µ —Ç–µ—Å—Ç! all\n"
            "‚Ä¢ /broadcast –ü—ñ–¥–ø–∏—Å—É–π—Ç–µ—Å—å –Ω–∞ @mychannel all\n"
            "‚Ä¢ /broadcast –ü–µ—Ä–µ—Ö–æ–¥—å—Ç–µ –Ω–∞ https://t.me/mychannel all\n"
            "‚Ä¢ /broadcast –ü—Ä–∏–≤—ñ—Ç https://picsum.photos/200/300 –ü–µ—Ä–µ–π—Ç–∏ https://example.com\n"
            "‚Ä¢ /broadcast –ü—Ä–∏–≤—ñ—Ç https://picsum.photos/200/300 –ü–µ—Ä–µ–π—Ç–∏ https://example.com all\n\n"
            "–î–æ–¥–∞–π—Ç–µ 'all' –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º (–Ω–µ –ª–∏—à–µ –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–º)"
        )
        return

    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏
        message_text = update.message.text
        command_parts = message_text.split(' ', 1)  # –†–æ–∑–¥—ñ–ª—è—î–º–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Ç–∞ —Ä–µ—à—Ç—É
        
        if len(command_parts) < 2:
            await update.message.reply_text("–ü–æ–º–∏–ª–∫–∞: –Ω–µ –≤–∫–∞–∑–∞–Ω–æ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏!")
            return
            
        full_text = command_parts[1]  # –í–µ—Å—å —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è /broadcast
        
        # –†–æ–∑—É–º–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ "all" –≤ –∫—ñ–Ω—Ü—ñ
        # –†–æ–∑–±–∏–≤–∞—î–º–æ —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞
        words = full_text.split()
        send_to_all = False
        
        if len(words) > 0 and words[-1].lower() == 'all':
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ "all" –Ω–µ —î —á–∞—Å—Ç–∏–Ω–æ—é URL –∞–±–æ @username
            if len(words) == 1:
                # –Ø–∫—â–æ —Ç—ñ–ª—å–∫–∏ "all" - —Ü–µ –∫–æ–º–∞–Ω–¥–∞
                send_to_all = True
                full_text = ""
            else:
                prev_word = words[-2] if len(words) >= 2 else ""
                # –Ø–∫—â–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î —Å–ª–æ–≤–æ –Ω–µ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –Ω–∞ URL-–ø–æ–¥—ñ–±–Ω—ñ —Å–∏–º–≤–æ–ª–∏
                if not (prev_word.endswith('.me') or 
                       prev_word.startswith('@') or
                       prev_word.startswith('http') or
                       ('/' in prev_word and ('t.me' in prev_word or 'telegram' in prev_word))):
                    send_to_all = True
                    # –í–∏–¥–∞–ª—è—î–º–æ –æ—Å—Ç–∞–Ω–Ω—î —Å–ª–æ–≤–æ "all"
                    full_text = ' '.join(words[:-1])
        
        if send_to_all:
            logger.info("–†–æ–∑—Å–∏–ª–∫–∞ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –í–°–Ü–ú –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º")
        else:
            logger.info("–†–æ–∑—Å–∏–ª–∫–∞ –±—É–¥–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∞ –ª–∏—à–µ –ü–Ü–î–ü–ò–°–ê–ù–ò–ú –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º")

        # –¢–µ–ø–µ—Ä —Ä–æ–∑–±–∏—Ä–∞—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∑ –æ—á–∏—â–µ–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
        args = full_text.split() if full_text.strip() else []
        
        if not args and not send_to_all:
            await update.message.reply_text("–ü–æ–º–∏–ª–∫–∞: –Ω–µ –≤–∫–∞–∑–∞–Ω–æ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏!")
            return
        elif not args and send_to_all:
            await update.message.reply_text("–ü–æ–º–∏–ª–∫–∞: –Ω–µ –≤–∫–∞–∑–∞–Ω–æ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—Å–∏–ª–∫–∏! (–∑–Ω–∞–π–¥–µ–Ω–æ —Ç—ñ–ª—å–∫–∏ 'all')")
            return

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        users = load_users(subscribed_only=not send_to_all)
        if not users:
            status_text = "–≤—Å—ñ—Ö" if send_to_all else "–ø—ñ–¥–ø–∏—Å–∞–Ω–∏—Ö"
            await update.message.reply_text(f"–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π –∞–±–æ –Ω–µ–º–∞—î {status_text} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤!")
            return

        status_message = await update.message.reply_text(f"üöÄ –†–æ–∑–ø–æ—á–∏–Ω–∞—é —Ä–æ–∑—Å–∏–ª–∫—É –¥–ª—è {len(users)} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...")

        # –õ—ñ—á–∏–ª—å–Ω–∏–∫–∏
        sent_count = 0
        blocked_count = 0
        error_count = 0

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø —Ä–æ–∑—Å–∏–ª–∫–∏
        if len(args) == 4:
            # –ü–æ–≤–Ω–∞ —Ä–æ–∑—Å–∏–ª–∫–∞ –∑ –∫–∞—Ä—Ç–∏–Ω–∫–æ—é —Ç–∞ –∫–Ω–æ–ø–∫–æ—é
            text, image_url, button_text, button_url = args
            logger.info(f"–†–æ–∑–ø–æ—á–∏–Ω–∞—î–º–æ –ø–æ–≤–Ω—É —Ä–æ–∑—Å–∏–ª–∫—É –∑ –∫–∞—Ä—Ç–∏–Ω–∫–æ—é –¥–ª—è {len(users)} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")

            # –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É –∑ URL
            keyboard = [[InlineKeyboardButton(button_text, url=button_url)]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            for i, user_id in enumerate(users):
                try:
                    await context.bot.send_photo(
                        chat_id=user_id,
                        photo=image_url,
                        caption=text,
                        reply_markup=reply_markup
                    )
                    sent_count += 1
                    logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–∞—Ä—Ç–∏–Ω–∫–æ—é –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
                    
                    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–æ–∂–Ω—ñ 50 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
                    if (i + 1) % 50 == 0:
                        await status_message.edit_text(
                            f"üì§ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ: {sent_count}/{len(users)}\n"
                            f"‚ùå –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: {blocked_count}\n"
                            f"‚ö†Ô∏è –ü–æ–º–∏–ª–æ–∫: {error_count}"
                        )
                    
                    # –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è rate limit
                    await asyncio.sleep(0.1)
                    
                except Forbidden:
                    blocked_count += 1
                    logger.warning(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞")
                    update_blocked_status(user_id, True)
                except BadRequest as e:
                    if "chat not found" in str(e).lower():
                        blocked_count += 1
                        logger.warning(f"–ß–∞—Ç –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
                        update_blocked_status(user_id, True)
                    else:
                        error_count += 1
                        logger.error(f"BadRequest –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
                except TelegramError as e:
                    error_count += 1
                    logger.error(f"TelegramError –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
                except Exception as e:
                    error_count += 1
                    logger.error(f"–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
        else:
            # –ü—Ä–æ—Å—Ç–∏–π —Ç–µ–∫—Å—Ç
            if len(args) > 1 and len(args) != 4:
                text = full_text  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è —Å–∫–ª–∞–¥–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
            else:
                text = args[0] if args else full_text
            
            logger.info(f"–†–æ–∑–ø–æ—á–∏–Ω–∞—î–º–æ —Ä–æ–∑—Å–∏–ª–∫—É —Ç–µ–∫—Å—Ç—É: '{text[:50]}...' –¥–ª—è {len(users)} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")
            
            for i, user_id in enumerate(users):
                try:
                    await context.bot.send_message(chat_id=user_id, text=text)
                    sent_count += 1
                    logger.info(f"–¢–µ–∫—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
                    
                    # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–æ–∂–Ω—ñ 50 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
                    if (i + 1) % 50 == 0:
                        await status_message.edit_text(
                            f"üì§ –ù–∞–¥—ñ—Å–ª–∞–Ω–æ: {sent_count}/{len(users)}\n"
                            f"‚ùå –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: {blocked_count}\n"
                            f"‚ö†Ô∏è –ü–æ–º–∏–ª–æ–∫: {error_count}"
                        )
                    
                    # –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è rate limit
                    await asyncio.sleep(0.1)
                    
                except Forbidden:
                    blocked_count += 1
                    logger.warning(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} –∑–∞–±–ª–æ–∫—É–≤–∞–≤ –±–æ—Ç–∞")
                    update_blocked_status(user_id, True)
                except BadRequest as e:
                    if "chat not found" in str(e).lower():
                        blocked_count += 1
                        logger.warning(f"–ß–∞—Ç –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º {user_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
                        update_blocked_status(user_id, True)
                    else:
                        error_count += 1
                        logger.error(f"BadRequest –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
                except TelegramError as e:
                    error_count += 1
                    logger.error(f"TelegramError –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")
                except Exception as e:
                    error_count += 1
                    logger.error(f"–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")

        # –§—ñ–Ω–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç
        final_message = (
            f"‚úÖ –†–æ–∑—Å–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
            f"üë• –í—Å—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {len(users)}\n"
            f"üì§ –£—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ: {sent_count}\n"
            f"‚ùå –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ –±–æ—Ç—É: {blocked_count}\n"
            f"‚ö†Ô∏è –ü–æ–º–∏–ª–æ–∫: {error_count}\n\n"
            f"üìä –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: {(sent_count/len(users)*100):.1f}%" if users else "üìä –£—Å–ø—ñ—à–Ω—ñ—Å—Ç—å: 0%"
        )
        
        await status_message.edit_text(final_message)
        logger.info(f"–†–æ–∑—Å–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–∞–¥—ñ—Å–ª–∞–Ω–æ: {sent_count}, –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ: {blocked_count}, –ü–æ–º–∏–ª–æ–∫: {error_count}")
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–∑—Å–∏–ª—Ü—ñ: {e}")
        await update.message.reply_text(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
